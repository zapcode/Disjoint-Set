#include <bits/stdc++.h>
using namespace std;

struct item;
struct node{
    int data;
    node *next;
    item *rep;
};
struct item{
    node *head;
    node *tail;
};
map<int,node*> addressfind;
void makeset(int a)
{
    item *newitem = new item;
    node *newnode = new node;
    newnode->data = a;
    newnode->next = NULL;
    newitem->head = newnode;
    newitem->tail=newitem->head;
    addressfind[a]=newitem->head;
    newnode->rep=newitem;
}
 struct item *find(int key)
{
    node *ptr=addressfind[key];
    return (ptr->rep);
}
void Union(item *first,item *second)
{
    node *ptr = second->head;
    while(ptr!=NULL)
    {
        ptr->rep = first;
        ptr=ptr->next;
    }
    first->tail->next=second->head;          //MAKING NODE CONNECTIONS
    first->tail=second->tail;               //ADJUSTED TAIL
    delete second;
}
int main()
{  
    makeset(1);
    makeset(2);
    makeset(3);
    makeset(4);
    makeset(5);
    makeset(6);
    makeset(7);
    makeset(8);
    makeset(9);
cout<<"1 "<<find(1)<<endl;
cout<<"2 "<<find(2)<<endl;
cout<<"3 "<<find(3)<<endl;
cout<<"4 "<<find(4)<<endl;
cout<<"5 "<<find(5)<<endl;
Union(find(1),find(2));
Union(find(3),find(4));
Union(find(1),find(4));
cout<<find(1)<<endl;
cout<<find(2)<<endl;
cout<<find(3)<<endl;
cout<<find(4)<<endl;
    
}
